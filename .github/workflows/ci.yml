name: FastAPI, Build and Test

on:
  push:
    branches:
      - main
      - develop
      - feature/**

jobs:
  format:
    name: Black and Bandit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip 
          pip install black bandit -r requirements.txt

      - name: Check black on all files
        run: make black_check

      - name: Check security in the project
        run: make bandit

  test:
    name: Run some tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: make test

  qualimetry:
    name: View quality of code with SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and generate coverage report
        run: |
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1
        with:
          args: >
            -Dsonar.projectKey=devops_project
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONARQUBE_URL }}
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.python.coverage.reportPaths=coverage.xml


  build:
    name: Build Dockerfile
    runs-on: ubuntu-latest
    env:
      ENV: dev
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: make docker-build #TODO Changer la commande pour avoir les variables d'environnement dédiées
